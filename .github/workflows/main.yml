name: Build, Push and Deploy Next.js App

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get semantic version
        uses: codfish/semantic-release-action@v2
        id: semantic
        with:
          dry_run: false
          commit_analyzer_args: --debug --preset angular --config ./release-rules.json
          branches: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Print semantic version
        run: echo ${{ steps.semantic.outputs.release-version }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: lawanginkhan/remote-jobs-nextjs-app:${{ steps.semantic.outputs.release-version }}

      - name: Save version to file
        run: echo "${{ steps.semantic.outputs.release-version }}" > version.txt

      - name: Upload version as artifact
        uses: actions/upload-artifact@v2
        with:
          name: version
          path: version.txt

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download version artifact
        uses: actions/download-artifact@v2
        with:
          name: version

      - name: Print semantic version from version artifact
        id: print_version
        run: echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV

      - name: Install and configure kubectl
        run: |
          VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
          curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
            --progress-bar \
            --location \
            --remote-name
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          echo ${{ secrets.KUBECONFIG }} | base64 --decode > kubeconfig.yaml

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Deploy to EKS
        run: |
          export KUBECONFIG=kubeconfig.yaml
          envsubst < nextjs-deployment.yaml | kubectl apply -f -
        env:
          DOCKER_TAG: ${{ env.VERSION }}
